// Generated by CoffeeScript 1.6.3
(function() {
  var Bullet, Nas, root,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  Bullet = (function() {
    var SCRIPT, TRANSITIONS, UNIT;

    UNIT = 10;

    TRANSITIONS = {
      left: {
        x: -UNIT,
        y: 0
      },
      right: {
        x: UNIT,
        y: 0
      },
      down: {
        x: 0,
        y: UNIT
      },
      up: {
        x: 0,
        y: -UNIT
      }
    };

    SCRIPT = ['right', 'up', 'up', 'left', 'down', 'down'];

    function Bullet(x, y, numBullets, circle) {
      this.x = x;
      this.y = y;
      this.numBullets = numBullets;
      this.circle = circle;
      this.animate = __bind(this.animate, this);
      this.position = {
        x: UNIT * this.x + 5,
        y: UNIT * this.y + 1
      };
      x = this.position.x;
      y = this.position.y;
      this.div = $("<div>").addClass("bullet").css({
        transform: "translate(" + x + "px," + y + "px)"
      });
      this.circle.append(this.div);
    }

    Bullet.prototype.setNext = function(next, iteration) {
      this.next = next;
      this.iteration = iteration;
    };

    Bullet.prototype.step = function(coordinates) {
      return this.position = {
        x: this.position.x + coordinates.x,
        y: this.position.y + coordinates.y
      };
    };

    Bullet.prototype.animate = function() {
      var direction, transition;
      direction = SCRIPT[this.iteration];
      transition = TRANSITIONS[direction];
      this.step(transition);
      this.div.transition(this.position, this.next.animate);
      return this.iteration = (this.iteration + 1) % this.numBullets;
    };

    return Bullet;

  })();

  Nas = (function() {
    function Nas(selector) {
      var bullet, i, iteration, nas, numBullets, numTransitions, _i, _len, _ref;
      this.circle = $("<div>").addClass("circle");
      this.bullets = [];
      numBullets = 6;
      numTransitions = 6;
      this.bullets.push(new Bullet(1, 3, numBullets, this.circle));
      this.bullets.push(new Bullet(1, 2, numBullets, this.circle));
      this.bullets.push(new Bullet(1, 1, numBullets, this.circle));
      this.bullets.push(new Bullet(2, 1, numBullets, this.circle));
      this.bullets.push(new Bullet(2, 2, numBullets, this.circle));
      _ref = this.bullets;
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        bullet = _ref[i];
        iteration = [0, 5, 4, 3, 2][i];
        if (i === this.bullets.length - 1) {
          bullet.setNext(this.bullets[0], iteration);
        } else {
          bullet.setNext(this.bullets[i + 1], iteration);
        }
      }
      nas = $("<div>").addClass("nas");
      nas.append(this.circle);
      $(selector).append(nas);
    }

    Nas.prototype.start = function() {
      $(".nas").css("visibility", "visible");
      return this.bullets[0].animate();
    };

    Nas.prototype.stop = function() {
      return $(".nas").css("visibility", "hidden");
    };

    return Nas;

  })();

  root.Nas = Nas;

}).call(this);
